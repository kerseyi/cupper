<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code Patterns on Cupper</title>
    <link>https://kerseyi.github.io/cupper-2/patterns/code-patterns/</link>
    <description>Recent content in Code Patterns on Cupper</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://kerseyi.github.io/cupper-2/patterns/code-patterns/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Expandable Sections</title>
      <link>https://kerseyi.github.io/cupper-2/patterns/code-patterns/expandable-sections/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kerseyi.github.io/cupper-2/patterns/code-patterns/expandable-sections/</guid>
      <description>Applicable WCAG 2.1 Success Criteria 1.3.1 Info and Relationships (level A):Information, structure, and relationships conveyed through presentation can be programmatically determined or are available in text.2.1.1 Keyboard (level A):All functionality of the content is operable through a keyboard interface without requiring specific timings for individual keystrokes, except where the underlying function requires input that depends on the path of the user&amp;#39;s movement and not just the endpoints4.</description>
    </item>
    
    <item>
      <title>Accordion Menus</title>
      <link>https://kerseyi.github.io/cupper-2/patterns/code-patterns/accordion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kerseyi.github.io/cupper-2/patterns/code-patterns/accordion/</guid>
      <description>Accordion menus are everywhere we look on the web. With such ubiquity, you&amp;rsquo;d expect that there would be a pretty well defined standard for constructing these components. Well, there&amp;rsquo;s not. So when it comes to making accordion menus accessible, things can get tricky. While the functionality and HTML markup for accordions is pretty straightforward, some implementations are overly complex. Let&amp;rsquo;s take a look at the intended functionality of an accordion menu before we look under the hood.</description>
    </item>
    
    <item>
      <title>Pop ups and Modals</title>
      <link>https://kerseyi.github.io/cupper-2/patterns/code-patterns/modal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kerseyi.github.io/cupper-2/patterns/code-patterns/modal/</guid>
      <description>Popups and Modals Modals are intended to be used as a quick and simple way to capture an interaction from a user. They trap the userâ€™s focus (visual and navigational) in a window that is separated from the rest of the page content, blocking access to the contents on the main page until the modal is closed by the user. These modal windows are overlaid over the main page content, trapping keyboard focus in their windows, and blurring out or dimming the main page content.</description>
    </item>
    
  </channel>
</rss>