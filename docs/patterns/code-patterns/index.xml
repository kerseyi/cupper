<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code Patterns on A11y Ref</title>
    <link>https://kerseyi.github.io/cupper-2/patterns/code-patterns/</link>
    <description>Recent content in Code Patterns on A11y Ref</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://kerseyi.github.io/cupper-2/patterns/code-patterns/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Expandable Sections</title>
      <link>https://kerseyi.github.io/cupper-2/patterns/code-patterns/expandable-sections/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kerseyi.github.io/cupper-2/patterns/code-patterns/expandable-sections/</guid>
      <description>Applicable WCAG 2.1 Success Criteria 1.3.5 Identify Input Purpose (level AA):The purpose of each input field collecting information about the user can be programmatically determined when: The input field serves a purpose identified in the Input Purposes for User Interface Components section; and: The content is implemented using technologies with support for identifying the expected meaning for form input data. 2.1.1 Keyboard (level A):All functionality of the content is operable through a keyboard interface without requiring specific timings for individual keystrokes, except where the underlying function requires input that depends on the path of the user&amp;#39;s movement and not just the endpoints4.</description>
    </item>
    
    <item>
      <title>Accordion Menus</title>
      <link>https://kerseyi.github.io/cupper-2/patterns/code-patterns/accordion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kerseyi.github.io/cupper-2/patterns/code-patterns/accordion/</guid>
      <description>Accordion menus are everywhere we look on the web. With such ubiquity, you&amp;rsquo;d expect that there would be a pretty well defined standard for constructing these components. Well, there&amp;rsquo;s not. So when it comes to making accordion menus accessible, things can get tricky. While the functionality and HTML markup for accordions is pretty straightforward, some implementations are overly complex. Let&amp;rsquo;s take a look at the intended functionality of an accordion menu before we look under the hood.</description>
    </item>
    
    <item>
      <title>Pop ups and Modals</title>
      <link>https://kerseyi.github.io/cupper-2/patterns/code-patterns/modal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kerseyi.github.io/cupper-2/patterns/code-patterns/modal/</guid>
      <description>Popups and Modals Modals are intended to be used as a quick and simple way to capture an interaction from a user. They trap the user’s focus (visual and navigational) in a window that is separated from the rest of the page content, blocking access to the contents on the main page until the modal is closed by the user. These modal windows are overlaid over the main page content, trapping keyboard focus in their windows, and blurring out or dimming the main page content.</description>
    </item>
    
    <item>
      <title>Menus</title>
      <link>https://kerseyi.github.io/cupper-2/patterns/code-patterns/menus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kerseyi.github.io/cupper-2/patterns/code-patterns/menus/</guid>
      <description>Menu Buttons Here is an example of the menu button being activated on the click event.
Demo Launch ↗Menu Buttonconst menuButton = demo.getElementById(&#39;menu-btn-example1&#39;);menuButton.addEventListener(&#39;click&#39;, function(){let expanded = this.getAttribute(&#39;aria-expanded&#39;) === &#39;true&#39;;this.setAttribute(&#39;aria-expanded&#39;, !expanded);let exampleMenu = this.nextElementSibling;exampleMenu.hidden = !exampleMenu.hidden;});button {font-size: 1.25rem;border-radius: 0.33em;font-family: inherit;background: #111;color: #fefefe;padding: 0.75rem;border: 0;}ul {list-style: none;width: 150px;margin-top: 0px;padding-left: 0px;border-bottom-left-radius: 0.</description>
    </item>
    
    <item>
      <title>Datepicker</title>
      <link>https://kerseyi.github.io/cupper-2/patterns/code-patterns/datepicker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kerseyi.github.io/cupper-2/patterns/code-patterns/datepicker/</guid>
      <description>Accessible datepicker, ported from Inclusive Dates.
Applicable WCAG 2.1 Success Criteria 1.3.1 Info and Relationships (level A):Information, structure, and relationships conveyed through presentation can be programmatically determined or are available in text.2.1.1 Keyboard (level A):All functionality of the content is operable through a keyboard interface without requiring specific timings for individual keystrokes, except where the underlying function requires input that depends on the path of the user&amp;#39;s movement and not just the endpoints4.</description>
    </item>
    
    <item>
      <title>Skip Links</title>
      <link>https://kerseyi.github.io/cupper-2/patterns/code-patterns/skiplink/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kerseyi.github.io/cupper-2/patterns/code-patterns/skiplink/</guid>
      <description>Skip links are a common accessibility feature on websites. They are shortcuts to important parts of the webpage that makes it easier and quicker for some users – especially users with disabilities – to find their way around. They care commonly placed before the main navigation menu on the page, but can be used anywhere there is a chunk of content.
Skip links are usually hidden visually by default and appear when users navigate to them using the tab key on their keyboard.</description>
    </item>
    
    <item>
      <title>Sortable Table</title>
      <link>https://kerseyi.github.io/cupper-2/patterns/code-patterns/sort-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kerseyi.github.io/cupper-2/patterns/code-patterns/sort-table/</guid>
      <description>Adapted from: Inclusive Components</description>
    </item>
    
  </channel>
</rss>